@{
    ViewBag.Title = "All Appointments";
    Layout = "~/Views/Shared/_AdminLayout.cshtml"; // Use your admin layout file
}

<main class="content px-3 py-4 bg-light">
    <div class="container-fluid">
        <!-- Header Section -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h3 class="fw-bold fs-4">All Appointments</h3>
            <h5 class="text-muted">@DateTime.Now.ToShortDateString()</h5>
        </div>

        <!-- Appointments Table -->
        <div class="row">
            <div class="col-12">
                <div class="card shadow-sm border-0">
                    <div class="card-body">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>SR NO</th>
                                    <th>Name</th>
                                    <th>Service</th>
                                    <th>Date</th>
                                    <th>Time</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    // Static data for appointments
                                    var todayAppointments = new List<dynamic>
                                {
                                new { Id = 1, Name = "Isha", Service = "Haircut", Date = "19-02-2025", Time = "10:00 AM" },
                                new { Id = 2, Name = "Drashti", Service = "Facial", Date = "19-02-2025", Time = "11:30 AM" },
                                new { Id = 3, Name = "Priya", Service = "Massage", Date = "19-02-2025", Time = "1:00 PM" },
                                new { Id = 4, Name = "Isha", Service = "Hair Color", Date = "19-02-2025", Time = "3:00 PM" },
                                new { Id = 5, Name = "Radhesh", Service = "Haircut", Date = "19-02-2025", Time = "10:00 AM" },
                                new { Id = 6, Name = "Vaibhav", Service = "Facial", Date = "19-02-2025", Time = "11:30 AM" },
                                new { Id = 7, Name = "Nishant", Service = "Massage", Date = "19-02-2025", Time = "1:00 PM" },
                                new { Id = 8, Name = "Jenil", Service = "Hair Color", Date = "19-02-2025", Time = "3:00 PM" }
                                };
                                }

                                @if (todayAppointments.Any())
                                {
                                    foreach (var appointment in todayAppointments)
                                    {
                                        <tr>
                                            <td>@appointment.Id</td>
                                            <td>@appointment.Name</td>
                                            <td>@appointment.Service</td>
                                            <td>@appointment.Date</td>
                                            <td>@appointment.Time</td>
                                            <td>
                                                <button class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#cancelAppointmentModal"
                                                        data-appointment-id="@appointment.Id"
                                                        data-appointment-name="@appointment.Name"
                                                        data-appointment-service="@appointment.Service"
                                                        data-appointment-date="@appointment.Date"
                                                        data-appointment-time="@appointment.Time">
                                                    Cancel
                                                </button>
                                            </td>
                                            <td>
                                                <button class="btn btn-info btn-sm" data-bs-toggle="modal" data-bs-target="#postponeAppointmentModal"
                                                        data-appointment-id="@appointment.Id"
                                                        data-appointment-name="@appointment.Name"
                                                        data-appointment-service="@appointment.Service"
                                                        data-appointment-date="@appointment.Date"
                                                        data-appointment-time="@appointment.Time">
                                                    Postpone
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="6" class="text-center text-muted">No appointments for today.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Appointment Cancellation Modal -->
    <div class="modal fade" id="cancelAppointmentModal" tabindex="-1" aria-labelledby="cancelAppointmentModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="cancelAppointmentModalLabel">Cancel Appointment</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p><strong>Appointment Details:</strong></p>
                    <p><strong>Name:</strong> <span id="modalAppointmentName"></span></p>
                    <p><strong>Service:</strong> <span id="modalAppointmentService"></span></p>
                    <p><strong>Date:</strong> <span id="modalAppointmentDate"></span></p>
                    <p><strong>Time:</strong> <span id="modalAppointmentTime"></span></p>
                    <label class="form-label">Reason for Cancellation:</label>
                    <textarea class="form-control" rows="4" id="cancelReason"></textarea>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-danger" onclick="handleSendCancellation()">Confirm Cancellation</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Appointment Postponement Modal -->
    <div class="modal fade" id="postponeAppointmentModal" tabindex="-1" aria-labelledby="postponeAppointmentModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="postponeAppointmentModalLabel">Postpone Appointment</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p><strong>Appointment Details:</strong></p>
                    <p><strong>Name:</strong> <span id="modalPostponeAppointmentName"></span></p>
                    <p><strong>Service:</strong> <span id="modalPostponeAppointmentService"></span></p>
                    <p><strong>Current Date:</strong> <span id="modalPostponeAppointmentDate"></span></p>
                    <p><strong>Current Time:</strong> <span id="modalPostponeAppointmentTime"></span></p>
                    <label class="form-label">New Date:</label>
                    <input type="date" class="form-control" id="newPostponeDate" />
                    <label class="form-label">New Time:</label>
                    <input type="time" class="form-control" id="newPostponeTime" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-info" onclick="handleSendPostponement()">Confirm Postponement</button>
                </div>
            </div>
        </div>
    </div>
</main>

<!-- Include Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

<!-- Your custom script -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Handle Cancel Modal
        var cancelAppointmentModal = document.getElementById("cancelAppointmentModal");
        cancelAppointmentModal.addEventListener("show.bs.modal", function (event) {
            var button = event.relatedTarget; // Button that triggered the modal
            var appointmentId = button.getAttribute("data-appointment-id");
            var appointmentName = button.getAttribute("data-appointment-name");
            var appointmentService = button.getAttribute("data-appointment-service");
            var appointmentDate = button.getAttribute("data-appointment-date");
            var appointmentTime = button.getAttribute("data-appointment-time");

            // Update modal content
            document.getElementById("modalAppointmentName").textContent = appointmentName;
            document.getElementById("modalAppointmentService").textContent = appointmentService;
            document.getElementById("modalAppointmentDate").textContent = appointmentDate;
            document.getElementById("modalAppointmentTime").textContent = appointmentTime;
        });

        // Handle Postpone Modal
        var postponeAppointmentModal = document.getElementById("postponeAppointmentModal");
        postponeAppointmentModal.addEventListener("show.bs.modal", function (event) {
            var button = event.relatedTarget; // Button that triggered the modal
            var appointmentId = button.getAttribute("data-appointment-id");
            var appointmentName = button.getAttribute("data-appointment-name");
            var appointmentService = button.getAttribute("data-appointment-service");
            var appointmentDate = button.getAttribute("data-appointment-date");
            var appointmentTime = button.getAttribute("data-appointment-time");

            // Update modal content
            document.getElementById("modalPostponeAppointmentName").textContent = appointmentName;
            document.getElementById("modalPostponeAppointmentService").textContent = appointmentService;
            document.getElementById("modalPostponeAppointmentDate").textContent = appointmentDate;
            document.getElementById("modalPostponeAppointmentTime").textContent = appointmentTime;
        });
    });

    // Function to handle the send cancellation action
    function handleSendCancellation() {
        var cancelReason = document.getElementById("cancelReason").value;
        if (!cancelReason) {
            alert("Please provide a reason for cancellation.");
            return;
        }
        console.log("Cancellation Reason:", cancelReason);

        // Here you can add an AJAX call to send the cancellation reason to the server
        // Example:
        // $.ajax({
        //     url: '/Appointments/Cancel',
        //     method: 'POST',
        //     data: { id: appointmentId, reason: cancelReason },
        //     success: function(response) {
        //         console.log('Cancellation successful');
        //         $('#cancelAppointmentModal').modal('hide');
        //     },
        //     error: function(error) {
        //         console.error('Cancellation failed', error);
        //     }
        // });

        // Close the modal after sending
        var modal = bootstrap.Modal.getInstance(document.getElementById("cancelAppointmentModal"));
        modal.hide();
    }

    // Function to handle the send postponement action
    function handleSendPostponement() {
        var newDate = document.getElementById("newPostponeDate").value;
        var newTime = document.getElementById("newPostponeTime").value;

        if (!newDate || !newTime) {
            alert("Please provide a new date and time.");
            return;
        }
        console.log("New Date:", newDate);
        console.log("New Time:", newTime);

        // Here you can add an AJAX call to send the new date and time to the server
        // Example:
        // $.ajax({
        //     url: '/Appointments/Postpone',
        //     method: 'POST',
        //     data: { id: appointmentId, newDate: newDate, newTime: newTime },
        //     success: function(response) {
        //         console.log('Postponement successful');
        //         $('#postponeAppointmentModal').modal('hide');
        //     },
        //     error: function(error) {
        //         console.error('Postponement failed', error);
        //     }
        // });

        // Close the modal after sending
        var modal = bootstrap.Modal.getInstance(document.getElementById("postponeAppointmentModal"));
        modal.hide();
    }
</script>