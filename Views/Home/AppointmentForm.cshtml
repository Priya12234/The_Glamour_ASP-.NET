@{
    ViewData["Title"] = "Book Your Appointment";
}

<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
<!-- Add SweetAlert CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<div class="container-fluid p-5" style="position: relative;">
    <!-- Back Arrow with Bootstrap Icon -->
    <a href="/" class="appointment-back-arrow">
        <i class="bi bi-arrow-left"></i> <!-- Bootstrap arrow-left icon -->
    </a>

    <div class="container p-3 md-1" style="font-family: 'Kaisei HarunoUmi', serif; color: white;">
        <div class="row w-100 align-items-center">
            <!-- Left Section: Illustration -->
            <div class="col-md-6 appointment-left-section">
                <img src="/images/bro1.png" alt="Salon Illustration" class="img-fluid" />
            </div>

            <!-- Right Section: Form -->
            <div class="col-md-6 mx-auto appointment-right-section">
                <form id="appointmentForm" class="p-4 shadow-lg rounded" method="post">
                    @Html.AntiForgeryToken()
                    <h2 class="text-center">Book Your Appointment</h2>

                    <!-- Full Name (maps to 'name' in database) -->
                    <div class="mb-3">
                        <label class="form-label" for="name">Full Name:</label>
                        <input type="text" id="name" class="form-control" name="name" required />
                    </div>

                    <!-- Email (maps to 'contact_email' in database) -->
                    <div class="mb-3">
                        <label class="form-label" for="contactEmail">Email:</label>
                        <input type="email" id="contactEmail" class="form-control" name="contactEmail" required />
                    </div>

                    <!-- Phone Number (maps to 'contact_phone' in database) -->
                    <div class="mb-3">
                        <label class="form-label" for="contactPhone">Phone Number:</label>
                        <input type="tel" id="contactPhone" class="form-control" name="contactPhone" required />
                    </div>

                    <!-- Service Selection (maps to 'service' in database) -->
                    <div class="mb-3">
                        <label class="form-label" for="service">Service You Would Like to Book:</label>
                        <select id="service" class="form-select" name="service" required>
                            <option value="">Select a service</option>
                            <option value="makeup">Makeup</option>
                            <option value="haircut">Haircut</option>
                            <option value="massage">Massage</option>
                        </select>
                    </div>

                    <!-- Appointment Date (maps to 'date' in database) -->
                    <div class="mb-3">
                        <label class="form-label" for="date">Preferred Appointment Date:</label>
                        <input type="date" id="date" class="form-control" name="date" required />
                    </div>

                    <!-- Appointment Time (maps to 'time' in database) -->
                    <div class="mb-3">
                        <label class="form-label">Preferred Appointment Time:</label>
                        <div class="d-flex align-items-center gap-2 appointment-time-inputs">
                            <input type="number" name="hours" class="form-control" min="1" max="12" required placeholder="HH" />
                            :
                            <input type="number" name="minutes" class="form-control" min="0" max="59" required placeholder="MM" />
                            <select name="amPm" class="form-select w-auto" style="width: 100px;">
                                <option value="AM">AM</option>
                                <option value="PM">PM</option>
                            </select>
                        </div>
                    </div>

                    <!-- Other Details (maps to 'details' in database) -->
                    <div class="mb-3">
                        <label class="form-label" for="details">Other Details:</label>
                        <textarea id="details" class="form-control" name="details" rows="3"></textarea>
                    </div>

                    <!-- Payment Information -->
                    <div class="mb-3">
                        <label class="form-label fw-bold">Your Total Payment is: $<span id="totalPayment">0</span></label>
                    </div>

                    <!-- Submit Button -->
                    <button type="submit" class="btn btn-light w-100 fw-bold">Book Appointment</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Include required JS libraries -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- JavaScript to Calculate Total Payment and Handle Form Submission -->
<!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    // Replace your current script with this:
    document.addEventListener('DOMContentLoaded', function () {
        // Price calculation
        const servicePrices = {
            makeup: 50,
            haircut: 30,
            massage: 40,
        };

        const serviceSelect = document.getElementById('service');
        const totalPaymentSpan = document.getElementById('totalPayment');
        const form = document.getElementById('appointmentForm');

        if (!form) {
            console.error('Form element not found');
            return;
        }

        // Price calculation
        if (serviceSelect && totalPaymentSpan) {
            serviceSelect.addEventListener('change', () => {
                const selectedService = serviceSelect.value;
                totalPaymentSpan.textContent = servicePrices[selectedService] || 0;
            });
        }

        form.addEventListener('submit', async function (e) {
            e.preventDefault();

            if (!this.checkValidity()) {
                Swal.fire({
                    title: 'Form Incomplete',
                    text: 'Please fill in all required fields',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
                return;
            }

            const hours = parseInt(document.querySelector('input[name="hours"]').value);
            const minutes = parseInt(document.querySelector('input[name="minutes"]').value);
            const amPm = document.querySelector('select[name="amPm"]').value;

            let militaryHours = hours;
            if (amPm === 'PM' && hours < 12) militaryHours += 12;
            if (amPm === 'AM' && hours === 12) militaryHours = 0;

            // Create a proper object to send
            const appointmentData = {
                Name: document.getElementById('name').value,
                ContactEmail: document.getElementById('contactEmail').value,
                ContactPhone: document.getElementById('contactPhone').value,
                Service: document.getElementById('service').value,
                Date: document.getElementById('date').value,
                TimeString: `${militaryHours}:${minutes.toString().padStart(2, '0')}:00`,
                Details: document.getElementById('details').value
            };

            Swal.fire({
                title: 'Processing...',
                text: 'Please wait while we book your appointment',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            try {
                const response = await fetch('/Appointments/Create', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify(appointmentData)
                });

                const result = await response.json();

                if (response.ok && result.success) {
                    Swal.fire({
                        title: 'Success!',
                        text: 'Your appointment has been booked.',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        form.reset();
                        if (totalPaymentSpan) totalPaymentSpan.textContent = '0';
                    });
                } else {
                    let errorMessage = result.message || 'Something went wrong. Please try again.';
                    if (result.errors) {
                        errorMessage += '\n' + result.errors.join('\n');
                    }
                    Swal.fire({
                        title: 'Error!',
                        text: errorMessage,
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            } catch (error) {
                Swal.fire({
                    title: 'Error!',
                    text: 'Server error or network issue occurred.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
                console.error('Error:', error);
            }
        });
    });
</script>